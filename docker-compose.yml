version: "3.7"
services:
  config-service:
    image: piomin/config-service:1.1-SNAPSHOT
    ports:
      - "8088:8088"
    healthcheck:
      test: curl --fail http://localhost:8088/employee/docker  || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
  discovery-service:
    image: piomin/discovery-service:1.1-SNAPSHOT
    ports:
      - "8061:8061"
    depends_on:
      config-service:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8061/eureka/v2/apps || exit 1
      interval: 4s
      timeout: 2s
      retries: 3
    environment:
      SPRING_PROFILES_ACTIVE: docker
  employee-service:
    image: piomin/employee-service:1.2-SNAPSHOT
    ports:
      - "8080"
    depends_on:
      discovery-service:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
  department-service:
    image: piomin/department-service:1.2-SNAPSHOT
    ports:
      - "8080"
    depends_on:
      discovery-service:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
  organization-service:
    image: piomin/organization-service:1.2-SNAPSHOT
    ports:
      - "8080"
    depends_on:
      discovery-service:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
  gateway-service:
    image: piomin/gateway-service:1.1-SNAPSHOT
    ports:
      - "8060:8060"
    depends_on:
      discovery-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
  mysql:
    image: mysql:8.1
    ports:
      - "3306:3306"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=dev
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    security_opt:
      - seccomp:unconfined
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
  tempo:
    image: grafana/tempo:1.5.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./grafana_configs/tempo.yaml:/etc/tempo.yaml
      #- ./tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
  prometheus:
    image: prom/prometheus:v2.42.0
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./grafana_configs/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    command:
      -config.file=/etc/loki.yaml
    volumes:
      - ./grafana_configs/loki.yaml:/etc/loki.yaml
  promtail:
    image: grafana/promtail:2.8.0
    ports:
      - "9080:9080"
    volumes:
      - ./grafana_configs/promtail.yaml:/etc/promtail.yaml
      - /var/log:/var/log
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail.yaml
  grafana:
    image: grafana/grafana:9.3.0
    volumes:
      - ./grafana_configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"